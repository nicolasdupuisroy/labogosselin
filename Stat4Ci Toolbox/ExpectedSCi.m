function [SCiMean, SCiStd] = ExpectedSCi(trialsMean, trialsStd, predVar, GaussianFilter) % EXPECTEDSCI Computes the expected mean and standard deviation of a classification image % 	given trialsMean and trialsStd, vectors containing the means and stds of the sampling % 	noise fields, predVar, a cell of vectors of predictive variables, and GaussianFilter % 	the filter used in the smoothing stage.% 	E.g.	nbTrials = 200;% 			predVar{1} = 2 * (rand(1,nbTrials) - .5);% 			sigma = 10; TNoyau = 6*sigma; GaussianFilter = fspecial('gaussian',ceil(TNoyau),sigma);% % 			% Sampling with Gaussian white noise (mean = 0; std = 1)% 			trialsMean = 0;% 			trialsStd = 1;% 			[SCiMean, SCIStd] = ExpectedSCi(trialsMean, trialsStd, predVar, 1) % without smoothing% 			[SCiMean, SCIStd] = ExpectedSCi(trialsMean, trialsStd, predVar, GaussianFilter) % with smoothing% % 			% Sampling with Gaussian bubbles% 			nbBubbles = round(500*rand(1,nbTrials)+100);% 			nbPixels = 256^2;% 			[trialsMean, trialsStd] = ExpectedNoise(nbPixels, nbBubbles);% 			[SCiMean, SCIStd] = ExpectedSCi(trialsMeans, trialsStd, predVar, 1) % without smoothing% 			[SCiMean, SCIStd] = ExpectedSCi(trialsMeans, trialsStd, predVar, GaussianFilter) % with smoothing % % See also EXPECTEDNOISE, BUILDCI, DEMOSTAT4CI% % The Stat4Ci toolbox is free (http://mapageweb.umontreal.ca/gosselif/stat4ci.html); if you use % it in your research, please, cite us:%	Chauvin, A., Worsley, K. J., Schyns, P. G., Arguin, M. & Gosselin, F. (2004).  A sensitive %	statistical test for smooth classification images.% % Alan Chauvin & Frédéric Gosselin (frederic.gosselin@umontreal.ca), 20/08/2004nbPredVar = length(predVar);for whichPredVar = 1:nbPredVar,	SCiMean(whichPredVar) = sum(predVar{whichPredVar} .* trialsMean); 	SCiStd(whichPredVar) = sqrt(sum(sum((predVar{whichPredVar} .* trialsStd).^2) .* GaussianFilter(:).^2));end