function bubbles_bruno(name, block, start_bubbles)imageList = LOADLISTOFIMAGES('bubbles_image_set.txt');temp = IMREAD(imageList{1});% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % 1. Makes a PCID file% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % rand('state', sum(100*clock)); % initialize the pseudo-random number generatorfileName = sprintf('bubbles_%s_%d.pcid', name, block);info = 'Bubbles experiment, UCL, May 2006.';noise = 'noiseLocation.m';s1 = sprintf('glopar{1} = [%d %d]; ', size(temp)); % size of the stimulis2 = 'glopar{2} = 10; '; % std of bubbleconstants = [s1 s2];dataLabels = 'the_seed nbBubbles image_number flip_or_not response RT';% 1.1 Creates a data matrixnbColumns = 6;nbFaces = 27; nbRepeat = 28; nbData = nbFaces * nbRepeat;data = zeros(nbColumns, nbData);data(2,1) = start_bubbles;data(3,:) = repmat([1:nbFaces], 1, nbRepeat); % image numbersdata = data(:, randperm(nbData)); % jumble everythingdata(1,:) = round(2^24*rand(1, nbData)); % the seeddata(4,:) = round(rand(1,nbData)); % flipped or not% 1.2 Saves everything in a CID filemakeCid(fileName, info, noise, constants, dataLabels, data)% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % 2- Runs the experiment guided by a PCID% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % fileName = sprintf('bubbles_%s_%d.pcid', name, block);rand('state', sum(100*clock));cid = readCid(fileName);eval(cid.constants)hidecursorwindow = INITSCREEN;for trial = 1:nbTrials,	anImage = IMREAD(imageList{cid.data(3, trial)});	if(cid.data(5, trial) == 0) % not sampled		aStimulus = anImage;	else						% sampled		aStimulus = NOISELOCATION(cid.data(:, trial), anImage);	end    if cid.data(6, trial)        aStimulus = fliplr(aStimulus);    end	SHOWGALV(window, aStimulus, timing, dio_flag, dio);	fprintf(fid, '%f\t%f\t%f\t%f\t%f\t%f\t%f\n', cid.data(:, trial));endfclose(fid)SCREEN closeallshowcursorfileName = sprintf('GALV_%s_%d.cid', name, block);MAKECID(fileName, cid);